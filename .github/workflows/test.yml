name: Tests

on: ["push", "pull_request"]

jobs:
  tests:
    name: "Go ${{ matrix.go.series }}"
    runs-on: "ubuntu-24.04"

    strategy:
      matrix:
        go:
          # Keep minimum version up to date with go.mod
          - series: "1.24"
            version: "1.24.2"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go.version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go.version }}

    - name: Cache Go modules
      uses: "actions/cache@v4"
      with:
        path: cache
        key: "go=${{ matrix.go.version }};v=1"

    - name: Run tests
      run: go test ./...

  integration:
    name: Integration Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go:
          # Keep minimum version up to date with go.mod
          - series: "1.24"
            version: "1.24.2"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go.version }}

    - name: Download dependencies
      run: go mod download

    - name: Build binary
      run: go build -v -o munkisrv ./cmd/munkisrv

    - name: Create test config
      run: |
        cat > test-config.yaml << EOF
        server:
          host: "localhost"
          port: ":8080"
        cloudfront:
          url: "https://test.cloudfront.net"
          key_id: "K1HFGXOMBB6TFF"
          private_key: |
            -----BEGIN RSA PRIVATE KEY-----
            MIIEpAIBAAKCAQEA8FwXbOgMCDuxjKASqKsBIcxklt1jAbn6QFWLUoDwE54nURlo
            MZQ8yNSg0VsljegJudDhLy8IGuFTJCnjE3UQXuyAoOMk4lM6JMcFm71v5/rOuZiG
            AfrtDWh931WHfAzXHztDxvrGVqTdzgiX6x+zeRXJ9B9jHaUcw7guWmCt2U8tVYTk
            lDK+Gmfw9+/DmVSfc2BUbVmjbcSNpKqpGI+iQWElL65w4a516OG0Z+levQ1/uG7z
            cfxMMbs8UjHQQ2KtlVRr1QTY4cPlr9/+umM6RPDsHyCFuJl00mtjz4zjkx0DPgAz
            wiCiiRrbHv7Jew1FLrUEBJ0C0KyN7R+Yl61YzwIDAQABAoIBAAzkM5FwxKxwXy52
            q2mGenIQn1iEGTpPej+XFvje14GF2v/7h94Y4EW5OcLgy5vX1SW1MU6xjBK9AROQ
            d5Bkl/MvZhq69BB7fEPatM9MksLzbcEAkDds+OfeMdoXoUOjAKq5KAJ1Esw03Xye
            c191/M9CvuksAcnmQCuzJjFMvCZKgTz4yNJJpi0f4uzRtJNeJ3s3cKDuG4IH+v/b
            HCRF3qcXIxUTHbdNueTPubDIWtLVLQR3uHRbyIFs+Uu9WMjMplIp16SP16Mw9sbI
            RpTah5ALJ3Gn4XYqrBkJPtB1d2Pis6EMz3vfQo6WXZYIR+BiXDctG3cD02Urq5rl
            fbODMhkCgYEA+X5YRgZyZsdiPjwswRnS4MTb7xrOsVzdn3sCFmo9bcyaddGMvzUJ
            kq3BDLxOQn48cQbFhVOs4Dj0MNadSrLApPaDXPMjWGR8ibdbCZ5PQToBSS3+LOOo
            3Ng79KditwYOv1qbF8oENgfegVJSgWwbNB6nrOMoQmqZIzwq6E4bGaUCgYEA9qDE
            odNqg0H5rXAwvKXohR5RbPFVPMe+lHJ7MxlhpoMQ9bTub7tlgrDsLibVChjMjYSr
            6XzmaOXOfm40kMUvY6wh/LfSe/iu2qRSwCb+mmTUb2RBgo9zFkl5E7P6swsxHRZq
            0vFt4+KwW4S51apsA7ITs+h7NCCEigo9QeAxVmMCgYAgkXCee3r1lbNqYlqJPoC7
            nJcFKF+w4WmAxwLnwCiSq7HCDX+s+hRs1EeuDOq+XVIwguzH0btwbZ7avTk9JgZl
            wlQ1jvufL0beh1PX9pVr81F1pw5V98X0RjnVXwBQ2faU3hP+z/0qvG48PW3NvTnz
            3MiQlfqMaPPimJkVSBTbjQKBgQC2MdhxcDzMkM3BehMXGj2nMdmXcMW2bB13jwdC
            naqNF2BNFAfdVQRNwyQHiDp0BhP/LBbQG6wfrD2bGxEMLg+vQ3esOaRuXy3VafWT
            7HrEVl61l8vphs3PliGzE4/N+yOiSHBMO30iD9KXGXsrxIWdSU3S55k0zhz72Uqd
            wuDP3wKBgQD09i4Xn/TjKDY1lJuUdp0HoswlpodeqXDWEIi3WEGPGJlYsu0EuCW+
            Eh4UKDVUwJPr6yHZdW5FpSeXsuJLuxpAgCrgtZSr3j4N/L6hhUDrHOHU+zwUBWN+
            Q6330VSxXxtQ47l5/pRwqs3Lc7K592FAvEpr99R650UY36J9F0471g==
            -----END RSA PRIVATE KEY-----
        EOF

    - name: Start server in background
      run: |
        ./munkisrv -c test-config.yaml &
        SERVER_PID=$!
        echo $SERVER_PID > server.pid
        sleep 3

    - name: Test health endpoint
      run: |
        curl -f http://localhost:8080/healthz || exit 1

    - name: Test repository endpoint
      run: |
        curl -f http://localhost:8080/repo/catalogs/all || exit 1

    - name: Stop server
      run: |
        if [ -f server.pid ]; then
          kill $(cat server.pid) || true
        fi
      if: always() 
